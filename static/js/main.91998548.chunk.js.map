{"version":3,"sources":["reducers/projectReducer.js","contexts/ProjectContext.js","components/TaskDetails.js","components/TaskForm.js","components/FeatureOverlay.js","components/FeatureDetails.js","components/FeatureForm.js","components/ProjectOverlay.js","components/ProjectDetails.js","components/ProjectForm.js","components/ProjectList.js","App.js","serviceWorker.js","index.js"],"names":["projectReducer","state","action","type","title","tasks","features","featureOrder","featuresDone","doneFeatures","id","uuidv1","filter","project","map","editProject","featureId","addFeature","projectId","featureTitle","taskIds","tasksDone","doneTasks","deleteFeature","editFeature","reorder","newFeatureOrder","ids","newId","addTask","push","content","task","taskId","taskIndex","indexOf","splice","editTask","taskContent","newFeature","newTaskIds","ProjectContext","createContext","ProjectContextProvider","props","initialData","useReducer","localData","localStorage","getItem","JSON","parse","projects","dispatch","useEffect","setItem","stringify","Provider","value","children","TaskDetails","index","feature","useContext","useState","newTask","setNewTask","e","deleteTask","draggableId","provided","className","ref","innerRef","draggableProps","dragHandleProps","html","onChange","contentEditable","onClick","TaskForm","onSubmit","preventDefault","placeholder","target","required","FeatureOverlay","setFeature","includes","isDone","setDone","overlayOff","document","getElementById","style","display","opacity","onKeyDown","keyCode","classList","toggle","backgroundColor","color","width","name","cols","rows","marginTop","fontSize","FeatureDetails","overlayOn","textarea","focus","droppableId","droppableProps","key","FeatureForm","margin","ProjectOverlay","setTitle","textAlign","WebkitTextFillColor","WebkitTextStroke","position","ProjectDetails","setProject","length","forEach","onDragEnd","result","destination","source","Array","from","newProject","direction","ProjectForm","ProjectList","addProject","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.91998548.chunk.js","sourcesContent":["import { v1 as uuidv1 } from 'uuid';\r\n\r\nexport const projectReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_PROJECT':\r\n            return [...state, {\r\n                title: action.title,\r\n                tasks: {},\r\n                features: {},\r\n                featureOrder: [],\r\n                featuresDone: 0,\r\n                doneFeatures: [],\r\n                id: uuidv1()\r\n            }]\r\n        case 'DELETE_PROJECT':\r\n            return state.filter(project => project.id !== action.id)\r\n        case 'EDIT_PROJECT':\r\n            return state.map(project => {\r\n                if(project.id === action.editProject.id) {\r\n                    return project = {\r\n                        title: action.editProject.title,\r\n                        tasks: project.tasks,\r\n                        features: project.features,\r\n                        featureOrder: project.featureOrder,\r\n                        featuresDone: project.featuresDone,\r\n                        doneFeatures: project.doneFeatures,\r\n                        id: project.id\r\n                    }\r\n                } else {\r\n                    return project\r\n                }\r\n            })\r\n        case 'ADD_FEATURE':\r\n            const featureId = uuidv1();\r\n            return state.map(project => {\r\n                if(project.id === action.addFeature.projectId) {\r\n                    return project = {\r\n                        title: project.title,\r\n                        tasks: project.tasks,\r\n                        features: {...project.features, [featureId]: {\r\n                            id: featureId,\r\n                            title: action.addFeature.featureTitle,\r\n                            taskIds: [],\r\n                            tasksDone: 0,\r\n                            doneTasks: [],\r\n                        }},\r\n                        featureOrder: [...project.featureOrder, featureId],\r\n                        featuresDone: project.featuresDone,\r\n                        doneFeatures: project.doneFeatures,\r\n                        id: project.id\r\n                    }\r\n                } else {\r\n                    return project\r\n                }\r\n            })\r\n        case 'DELETE_FEATURE':\r\n            return state.map(project => {\r\n                if(project.id === action.deleteFeature.projectId) {\r\n                    delete project.features[action.deleteFeature.featureId];\r\n                    return project = {\r\n                        title: project.title,\r\n                        tasks: project.tasks,\r\n                        features: project.features,\r\n                        featureOrder: project.featureOrder.filter(id => id !== action.deleteFeature.featureId),\r\n                        featuresDone: project.featuresDone,\r\n                        doneFeatures: project.doneFeatures,\r\n                        id: project.id\r\n                    };\r\n                } else {\r\n                    return project\r\n                }\r\n            })\r\n        case 'EDIT_FEATURE':\r\n            return state.map(project => {\r\n                if(project.id === action.editFeature.projectId) {\r\n                    project.features[action.editFeature.featureId].title = action.editFeature.featureTitle;\r\n                    return project;\r\n                } else {\r\n                    return project\r\n                }\r\n            })\r\n        case 'REORDER_FEATURE':\r\n            return state.map(project => {\r\n                if(project.id === action.reorder.projectId) {\r\n                    return project = {\r\n                        ...project,\r\n                        featureOrder: action.reorder.newFeatureOrder,\r\n                    }\r\n                } else {\r\n                    return project\r\n                }\r\n            })\r\n        case 'INCREMENT_DONE':\r\n            return state.map(project => {\r\n                if(project.id === action.ids.projectId) {\r\n                    return project = {\r\n                        title: project.title,\r\n                        tasks: project.tasks,\r\n                        features: project.features,\r\n                        featureOrder: project.featureOrder,\r\n                        featuresDone: project.featuresDone + 1,\r\n                        doneFeatures: [...project.doneFeatures, action.ids.featureId],\r\n                        id: project.id\r\n                    }\r\n                } else {\r\n                    return project\r\n                }\r\n            })\r\n        case 'DECREMENT_DONE':\r\n            return state.map(project => {\r\n                if(project.id === action.ids.projectId) {\r\n                    return project = {\r\n                        title: project.title,\r\n                        tasks: project.tasks,\r\n                        features: project.features,\r\n                        featureOrder: project.featureOrder,\r\n                        featuresDone: project.featuresDone - 1,\r\n                        doneFeatures: project.doneFeatures.filter(id => id !== action.ids.featureId),\r\n                        id: project.id\r\n                    }\r\n                } else {\r\n                    return project\r\n                }\r\n            })\r\n        case 'ADD_TASK':\r\n            const newId = uuidv1();\r\n            return state.map(project => {\r\n                if(project.id === action.addTask.projectId) {\r\n                    project.features[action.addTask.featureId].taskIds.push(newId);\r\n                    project.tasks[newId] = {id: newId, content: action.addTask.task}\r\n                    return project;\r\n                } else {\r\n                    return project\r\n                }\r\n            })\r\n        case 'DELETE_TASK':\r\n            return state.map(project => {\r\n                if(project.id === action.ids.projectId) {\r\n                    delete project.tasks[action.ids.taskId];\r\n                    const taskIndex = project.features[action.ids.featureId].taskIds.indexOf(action.ids.taskId);\r\n                    if (taskIndex > -1) {\r\n                        project.features[action.ids.featureId].taskIds.splice(taskIndex, 1);\r\n                    }\r\n                    return project\r\n                } else {\r\n                    return project\r\n                }\r\n            })\r\n        case 'EDIT_TASK':\r\n            return state.map(project => {\r\n                if(project.id === action.editTask.projectId) {\r\n                    project.tasks[action.editTask.taskId].content = action.editTask.taskContent;\r\n                    return project\r\n                } else {\r\n                    return project\r\n                }\r\n            })\r\n        case 'REORDER_TASK':\r\n            return state.map(project => {\r\n                if(project.id === action.reorder.projectId) {\r\n                    const newFeature = {...project.features[action.reorder.featureId], taskIds: action.reorder.newTaskIds};\r\n                    return project = {\r\n                        ...project,\r\n                        features: {\r\n                            ...project.features,\r\n                            [newFeature.id]: newFeature,\r\n                        }\r\n                    }\r\n                } else {\r\n                    return project\r\n                }\r\n            });\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport { projectReducer } from '../reducers/projectReducer';\r\n\r\nexport const ProjectContext = createContext();\r\n\r\nconst ProjectContextProvider = (props) => {\r\n    const initialData = [\r\n        {title: 'test project',\r\n        //sub features\r\n        tasks: {\r\n            'unique1-1': {id: 'unique1-1', content: 'Test1'},\r\n            'unique1-2': {id: 'unique1-2', content: 'Test2'},\r\n            'unique1-3': {id: 'unique1-3', content: 'Test3'},\r\n            'unique1-4': {id: 'unique1-4', content: 'Test4'},\r\n        },\r\n        //features\r\n        features: {\r\n            'unique1': {\r\n                id: 'unique1',\r\n                title: 'test feature',\r\n                taskIds: ['unique1-1', 'unique1-2'],\r\n                tasksDone: 0,\r\n                doneTasks: [],\r\n            },\r\n            'unique2': {\r\n                id: 'unique2',\r\n                title: 'test feature2',\r\n                taskIds: ['unique1-3', 'unique1-4'],\r\n                tasksDone: 0,\r\n                doneTasks: [],\r\n            },\r\n        },\r\n        featureOrder: ['unique1', 'unique2'],\r\n        featuresDone: 0, \r\n        doneFeatures: [],\r\n        id: 'unique0'},\r\n    ]\r\n    const [projects, dispatch] = useReducer(projectReducer, [], () => {\r\n        const localData = localStorage.getItem('projects');\r\n        return localData ? JSON.parse(localData) :\r\n            initialData\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('projects', JSON.stringify(projects));\r\n    }, [projects]);\r\n    return (\r\n        <ProjectContext.Provider value={{projects, dispatch}}>\r\n            { props.children }\r\n        </ProjectContext.Provider>\r\n    );\r\n}\r\n \r\nexport default ProjectContextProvider;","import React, { useContext, useState } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { ProjectContext } from '../contexts/ProjectContext';\r\nimport ContentEditable from 'react-simple-contenteditable';\r\n\r\nconst TaskDetails = ({ task, index, feature, project }) => {\r\n    const { dispatch } = useContext(ProjectContext);\r\n    const [newTask, setNewTask] = useState(task.content);\r\n\r\n    const editTask =(e, value) => {\r\n        setNewTask(value);\r\n        dispatch({type: 'EDIT_TASK', editTask: {projectId: project.id, taskId: task.id, taskContent: value}});\r\n    }\r\n    const deleteTask = (e) => {\r\n        dispatch({type: 'DELETE_TASK', ids: {projectId: project.id, featureId: feature.id, taskId: task.id}});\r\n    }\r\n    return(\r\n        <Draggable draggableId={task.id} index={index}>\r\n            {(provided) => (\r\n                <div className=\"tasks\" ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                    <span className='dot'></span>\r\n                    <ContentEditable\r\n                        html={newTask}\r\n                        className='taskText'\r\n                        onChange={editTask}\r\n                        contentEditable=\"plaintext-only\"\r\n                    />\r\n                    <span className='deleteBtn' onClick={deleteTask}>&times;</span>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nexport default TaskDetails;","import React, { useState, useContext } from 'react';\r\nimport { ProjectContext } from '../contexts/ProjectContext';\r\n\r\nconst TaskForm = ({feature, project}) => {\r\n    const { dispatch } = useContext(ProjectContext);\r\n    const [newTask, setNewTask] = useState('');\r\n\r\n    const addTask = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'ADD_TASK', addTask: {featureId: feature.id, projectId: project.id, task: newTask}});\r\n        setNewTask('');\r\n    }\r\n\r\n    return (\r\n        <div className='taskForm'>\r\n            <form onSubmit={addTask}>\r\n                <input type=\"text\" placeholder='Add a task' onChange={(e) => setNewTask(e.target.value)} value={newTask} required/>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TaskForm;","import React, { useState, useContext } from 'react';\r\nimport { ProjectContext } from '../contexts/ProjectContext';\r\n\r\nconst FeatureOverlay = ({feature, project}) => {\r\n    const { dispatch } = useContext(ProjectContext);\r\n    const [newFeature, setFeature] = useState(feature.title);\r\n    const [isDone, setDone] = useState(project.doneFeatures.includes(feature.id));\r\n\r\n    const editFeature = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'EDIT_FEATURE', editFeature: {featureTitle: newFeature, featureId: feature.id, projectId: project.id}});\r\n        overlayOff();\r\n    }\r\n    const handleDone = (e) => {\r\n        e.preventDefault();\r\n        setDone(!isDone);\r\n        document.getElementById(feature.id).classList.toggle('done');\r\n        isDone ? dispatch({type: 'DECREMENT_DONE', ids: {projectId: project.id, featureId: feature.id}}) : dispatch({type: 'INCREMENT_DONE', ids: {projectId: project.id, featureId: feature.id}});\r\n        overlayOff();\r\n    }\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'DELETE_FEATURE', deleteFeature: {projectId: project.id, featureId: feature.id}})\r\n        if(isDone) dispatch({type: 'DECREMENT_DONE', ids: {projectId: project.id, featureId: feature.id}});\r\n    }\r\n    const checkKeys = (e) => {\r\n        if(e.keyCode === 27) {\r\n            overlayOff();\r\n        }\r\n    }\r\n    const overlayOff = (e) => {\r\n        document.getElementById('featureOverlay'+feature.id).style.display = 'none';\r\n    }\r\n    return (\r\n        <div className=\"overlay\" style={{opacity: '1'}} onKeyDown={checkKeys}>\r\n            <div className=\"closeBtn\" onClick={overlayOff}>&otimes;</div>\r\n            <form className=\"finishBtn\" action=\"\" onSubmit={handleDone} >\r\n                <input type=\"submit\" value={isDone ? 'actually, not finished' : 'finished'} \r\n                    style={isDone ? {backgroundColor: 'transparent', color: '#5bbdc0', width: '100%'}:{width: '100%'}}\r\n                />\r\n            </form>\r\n            <textarea name=\"featureArea\" id=\"\" cols=\"30\" rows=\"10\" value={newFeature} onChange={(e) => setFeature(e.target.value)} required style={{marginTop: '3%', fontSize: '1em'}}></textarea>\r\n            <div className='BtnContainer'>\r\n                <form action=\"\" onSubmit={handleDelete}>\r\n                    <input type=\"submit\" value=\"delete feature\" style={{backgroundColor: '#f8f8f8', color: '#74bcaf'}}/>\r\n                </form>\r\n                <form action=\"\" onSubmit={editFeature}>\r\n                    <input type=\"submit\" value=\"edit feature\"/>\r\n                </form>              \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default FeatureOverlay;","import React from 'react';\r\nimport TaskDetails from './TaskDetails';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport TaskForm from './TaskForm';\r\nimport FeatureOverlay from './FeatureOverlay';\r\n\r\nconst FeatureDetails = ({feature, project, index}) => {\r\n    const isDone = () => {\r\n        if(project.doneFeatures.includes(feature.id)) {\r\n            return \"featureContainer done\";\r\n        } else {\r\n            return \"featureContainer\";\r\n        }\r\n    }\r\n    const overlayOn = (e) => {\r\n        document.getElementById('featureOverlay'+feature.id).style.display = 'block';\r\n        //these lines focus the cursor to the end of the textarea.\r\n        const textarea = document.getElementById('featureOverlay'+feature.id).children[0].children[2];\r\n        textarea.value = '';\r\n        textarea.value = feature.title;\r\n        textarea.focus();\r\n    }\r\n    return (\r\n        <div className=\"feature\">\r\n            <div className=\"overlayContainer\">\r\n                <div id={'featureOverlay'+feature.id}>\r\n                    <FeatureOverlay feature={project.features[feature.id]} project={project}/>\r\n                </div>\r\n            </div>\r\n            <Draggable draggableId={feature.id} index={index}>\r\n                {provided => (\r\n                    <div className={isDone()} id={feature.id} {...provided.draggableProps} ref={provided.innerRef}>\r\n                        <div className=\"featureTitle\" onClick={overlayOn} {...provided.dragHandleProps} type='task'>{feature.title}</div>\r\n                        <hr/>\r\n                        <div className='taskContainer' id={'task'+feature.id}>\r\n                            <Droppable droppableId={feature.id}>\r\n                                {(provided) => (\r\n                                    <div ref={provided.innerRef} {...provided.droppableProps}>\r\n                                        {feature.taskIds.map((taskId, index) => {\r\n                                            return(<TaskDetails key={taskId} feature={feature} project={project} task={project.tasks[taskId]} index={index} />);\r\n                                        })}\r\n                                        {provided.placeholder}\r\n                                    </div>\r\n                                )}\r\n                            </Droppable>\r\n                            <TaskForm feature={feature} project={project} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Draggable>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default FeatureDetails;","import React, { useState, useContext } from 'react';\r\nimport { ProjectContext } from '../contexts/ProjectContext';\r\n\r\nconst FeatureForm = ({project}) => {\r\n    const { dispatch } = useContext(ProjectContext);\r\n    const [feature, setFeature] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'ADD_FEATURE', addFeature: {featureTitle: feature, projectId: project.id}});\r\n        setFeature('');\r\n    }\r\n    const checkKeys = (e) => {\r\n        if(e.keyCode === 27) {\r\n            overlayOff();\r\n        }\r\n    }\r\n    const overlayOff = (e) => {\r\n        document.getElementById('featureForm'+project.id).style.display = 'none';\r\n    }\r\n    return (\r\n        <div className=\"overlay\" onKeyDown={checkKeys}>\r\n            <div className=\"closeBtn\" onClick={overlayOff}>&otimes;</div>\r\n            <div className='projectTitle'>{ project.title }</div>\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <input type=\"text\" value={feature}\r\n                    onChange={(e) => setFeature(e.target.value)} required/>\r\n                <div className=\"BtnContainer\" style={{margin: 0}}>\r\n                    <input type=\"submit\" value=\"add a feature\"/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default FeatureForm;","import React, { useState, useContext } from 'react';\r\nimport { ProjectContext } from '../contexts/ProjectContext';\r\n\r\nconst ProjectOverlay = ({project}) => {\r\n    const { dispatch } = useContext(ProjectContext);\r\n    const [title, setTitle] = useState(project.title);\r\n\r\n    const overlayOff = (e) => {\r\n        document.getElementById('projectOverlay'+project.id).style.display = 'none';\r\n    }\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'EDIT_PROJECT', editProject: {title: title, id: project.id}});\r\n        overlayOff();\r\n    }\r\n    const checkKeys = (e) => {\r\n        if(e.keyCode === 27) {\r\n            overlayOff();\r\n        }\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'DELETE_PROJECT', id: project.id});\r\n    }\r\n    return (\r\n        <div className=\"overlay\" onKeyDown={checkKeys}>\r\n            <div className=\"closeBtn\" onClick={overlayOff}>&otimes;</div>\r\n            <input type=\"text\" className='projectTitle' value={title}\r\n                        onChange={(e) => setTitle(e.target.value)} required style={{marginTop: '3.6%', fontSize: '2em', textAlign: 'center', color: '#37bfd9', WebkitTextFillColor: 'transparent', WebkitTextStroke: '.04em #37bfd9'}}/>\r\n            <div className=\"BtnContainer\">\r\n                <form action=\"\" onSubmit={handleSubmit}>\r\n                    <input type=\"submit\" value=\"delete project\" style={{backgroundColor: 'transparent', color: '#5bbdc0'}}/>\r\n                </form>\r\n                <form action=\"\" onSubmit={handleEdit}  style={{position: 'relative'}}>\r\n                    <input type=\"submit\" value=\"edit\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ProjectOverlay;","import React, { useState, useContext } from 'react';\r\nimport { ProjectContext } from '../contexts/ProjectContext';\r\nimport FeatureDetails from './FeatureDetails';\r\nimport FeatureForm from './FeatureForm';\r\nimport ProjectOverlay from './ProjectOverlay';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\nconst ProjectDetails = ({project}) => {\r\n    const { dispatch } = useContext(ProjectContext);\r\n    const [dragProject, setProject] = useState(project);\r\n    // console.log('project: ', project, '\\n   drag: ', dragProject);\r\n\r\n    const expandProject = (e) => {\r\n        if(project.featureOrder.length > 0) {\r\n            document.getElementById('projectDetail'+project.id).classList.toggle('expanded');\r\n            document.getElementById('feature'+project.id).classList.toggle('expandList');\r\n            const featureList = [...document.getElementById('feature'+project.id).children];\r\n            featureList.forEach(feature => {\r\n                feature.classList.toggle('largerFeature');\r\n                feature.children[1].classList.toggle('largerFeature');\r\n                feature.children[1].children[2].classList.toggle('unhide');\r\n            })\r\n        }\r\n    }\r\n    const addFeature = (e) => {\r\n        document.getElementById('featureForm'+project.id).style.display = 'block';\r\n        // this line adds focus text input field of feature form. There is def a better way to do this.\r\n        document.getElementById('featureForm'+project.id).children[0].children[2].children[0].focus();\r\n    }\r\n    const projectOverlay = (e) => {\r\n        document.getElementById('projectOverlay'+project.id).style.display = 'block';\r\n        // this line adds focus text input field of project overlay. There is def a better way to do this.\r\n        document.getElementById('projectOverlay'+project.id).children[0].children[1].focus();\r\n    }\r\n    const onDragEnd = (result) => {\r\n        const {destination, source, draggableId, type} = result;\r\n        //cancel if there is no destination\r\n        if(!destination) {\r\n            return;\r\n        }\r\n        //check if item was dropped in same place\r\n        if(destination.droppableId === source.droppableId && destination.index === source.index) {\r\n            return;\r\n        }\r\n        //check type\r\n        if(type === 'feature') {\r\n            const newFeatureOrder = Array.from(project.featureOrder);\r\n            newFeatureOrder.splice(source.index, 1);\r\n            newFeatureOrder.splice(destination.index, 0, draggableId);\r\n            const newProject = {\r\n                ...project,\r\n                featureOrder: newFeatureOrder,\r\n            }\r\n            setProject(newProject);\r\n            dispatch({type: 'REORDER_FEATURE', reorder: {projectId: project.id, newFeatureOrder: newFeatureOrder}});\r\n            return;\r\n        }\r\n        //reorder\r\n        const feature = project.features[source.droppableId];\r\n            //create a new array rather than mutating original ones\r\n        const newTaskIds = Array.from(feature.taskIds);\r\n        newTaskIds.splice(source.index, 1);\r\n        newTaskIds.splice(destination.index, 0, draggableId);\r\n            //create newFeature using og feature\r\n        const newFeature = {...feature, taskIds: newTaskIds,};\r\n            //newProject\r\n        const newProject = {\r\n            ...project, \r\n            features: {\r\n                ...project.features,\r\n                [newFeature.id]: newFeature,\r\n            },\r\n        }\r\n\r\n        setProject(newProject);\r\n        //need a new reducer called to make changes to the localStorage. need the taskIds array reordered.\r\n        dispatch({type: 'REORDER_TASK', reorder: {projectId: project.id, featureId: feature.id, newTaskIds: newTaskIds}})\r\n    }\r\n    return (\r\n        <div className=\"projectDetail\" id={'projectDetail'+project.id}>\r\n            <div className=\"overlayContainer\">\r\n                <div id={'featureForm'+project.id}>\r\n                    <FeatureForm project={project}/>\r\n                </div>\r\n                <div id={'projectOverlay'+project.id}>\r\n                    <ProjectOverlay project={project}/>\r\n                </div>\r\n            </div>\r\n            <div className='project'>\r\n                <div className=\"projectContainer\">\r\n                    <div className='featureCounter' onClick={expandProject}>\r\n                        {project.featuresDone}/{project.featureOrder.length} done\r\n                    </div>\r\n                    <div className='projectTitle' onClick={projectOverlay}>{project.title}</div>\r\n                    <div className='addFeature' onClick={addFeature}>\r\n                        &oplus; <br/> add a feature\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <Droppable droppableId='all-features' direction='horizontal' type='feature'>\r\n                    {provided => (\r\n                        <div className=\"featureList\" id={'feature'+project.id} {...provided.droppableProps} ref={provided.innerRef}> \r\n                            {project.featureOrder.map((featureId, index) => {\r\n                                return (<FeatureDetails feature={project.features[featureId]} project={project} index={index} key={featureId} />)\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ProjectDetails;","import React, { useState, useContext } from 'react';\r\nimport { ProjectContext } from '../contexts/ProjectContext';\r\n\r\nconst ProjectForm = () => {\r\n    const { dispatch } = useContext(ProjectContext);\r\n    const [project, setProject] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'ADD_PROJECT', title: project});\r\n        setProject('');\r\n        overlayOff();\r\n    }\r\n    const checkKeys = (e) => {\r\n        if(e.keyCode === 27) {\r\n            overlayOff();\r\n        }\r\n    }\r\n    const overlayOff = (e) => {\r\n        document.getElementById('projectForm').style.display = 'none';\r\n    }\r\n    return (\r\n        <div className=\"overlay\" onKeyDown={checkKeys}>\r\n            <div className=\"closeBtn\" onClick={overlayOff}>&otimes;</div>\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n                <input className='projectFormTitle' type=\"text\" value={project}\r\n                    onChange={(e) => setProject(e.target.value)} required/>\r\n                <div className=\"BtnContainer\" style={{margin: 0}}>\r\n                    <input type=\"submit\" value=\"add a project\"/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ProjectForm;","import React, { useContext } from 'react';\r\nimport { ProjectContext } from '../contexts/ProjectContext';\r\nimport ProjectDetails from './ProjectDetails';\r\nimport ProjectForm from './ProjectForm';\r\n\r\nconst ProjectList = () => {\r\n    const {projects} = useContext(ProjectContext);\r\n\r\n    const addProject = (e) => {\r\n        document.getElementById('projectForm').style.display = 'block';\r\n        // this line adds focus text input field of project form. There is def a better way to do this.\r\n        document.getElementById('projectForm').children[0].children[1].children[0].focus();\r\n    }\r\n    return projects.length ? (\r\n        <div className=\"projectList\">\r\n            <div className=\"overlayContainer\">\r\n                <div id='projectForm'>\r\n                    <ProjectForm/>\r\n                </div>\r\n            </div>\r\n            {projects.map(project => {\r\n                return (<ProjectDetails project={project} key={project.id}/>)\r\n            })}\r\n            <div className=\"addProject\" onClick={addProject}>&oplus; add a new project</div>\r\n        </div>\r\n    ) : (\r\n        <div>\r\n            <div className=\"overlayContainer\">\r\n                <div id='projectForm'>\r\n                    <ProjectForm/>\r\n                </div>\r\n            </div>\r\n            <div className=\"addProject\" onClick={addProject}>&oplus; add a new project</div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ProjectList;","import React from 'react';\r\nimport ProjectList from './components/ProjectList';\r\nimport ProjectContextProvider from './contexts/ProjectContext';\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n        <ProjectContextProvider>\r\n          <ProjectList/>\r\n        </ProjectContextProvider>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}